 package GameInterface;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JPanel;

import GameConstants.Constants;
import GameImage.Image;
import GameImage.ImageFactory;
import GameObject.Ball;

public class GamePanel extends JPanel implements ActionListener{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * 
	 */
	private ImageIcon Background_Game;
	java.awt.Image Ball;
	//private List cellule ;
	private JList<Ball>  cellule ;
	int x=62,y=288;
	public GamePanel() {
		init();
		this.addMouseListener((MouseListener) new MouseAdapter() {
    	    @Override 
    	    public void mousePressed(MouseEvent e) {
  
    	    	if((e.getX() >= 66 && e.getX() <= 124 ) && (e.getY() >= 130 && e.getY() <= 228)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	else if((e.getX() >= 66 && e.getX() <= 124 ) && (e.getY() >= 294 && e.getY() <= 347)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	else if((e.getX() >= 184 && e.getX() <= 255 ) && (e.getY() >= 290 && e.getY() <= 347)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	else if((e.getX() >= 315 && e.getX() <= 374 ) && (e.getY() >= 289 && e.getY() <= 343)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	else if((e.getX() >= 431 && e.getX() <= 488 ) && (e.getY() >= 288 && e.getY() <= 339)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	else if((e.getX() >= 547 && e.getX() <=606 ) && (e.getY() >= 287 && e.getY() <= 342)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	else if((e.getX() >= 671 && e.getX() <=733 ) && (e.getY() >= 289 && e.getY() <= 350)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	else if((e.getX() >= 675 && e.getX() <=727 ) && (e.getY() >= 150 && e.getY() <= 211)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	else if((e.getX() >= 543 && e.getX() <=601 ) && (e.getY() >= 158 && e.getY() <= 207)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	else if((e.getX() >= 443 && e.getX() <= 481 ) && (e.getY() >= 159 && e.getY() <= 206)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	else if((e.getX() >= 320 && e.getX() <=374 ) && (e.getY() >= 163 && e.getY() <= 214)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	else if((e.getX() >= 195 && e.getX() <=242 ) && (e.getY() >= 160 && e.getY() <= 209)) {
    	    		setImage((BufferedImage) Ball);
    	    	
    	    	 }
    	    	System.out.println(e.getX() + "," + e.getY());
    	  }});
		initVariable();
		initializeGame();

		actionPerformed(null);
	}

	private void initVariable() {
		this.Background_Game = ImageFactory.createImage(Image.BACKGROUND_Game);
		try {
    		 Ball = ImageIO.read(new File("Images/ball.png"));
    		 
		}
		catch(IOException exc) {
			exc.printStackTrace();
		}
		
	}

	private void init() {
		setPreferredSize(new Dimension(Constants.BOARD_WIDTH, Constants.BOARD_HEIGHT));
	}
	
	public void initializeGame() {
		
		
		
	}
		@Override
	protected void paintComponent(Graphics g) {
			super.paintComponent(g);
		
		g.drawImage(Background_Game.getImage(), 0, 0,null);
		
		
		}
		
		void setImage(BufferedImage Ball)
        { this.Ball = Ball;
        for( int i=1 ; i <= 4 ; i++) {
			if(i==1) { 
				
				   x=(int)(Math.random() * (255-185) + 184);;
		    	   y=(int)(Math.random() * (347 - 295) + 294);;
		    	   repaint();
			}
       
        }   	
          
        }

		@Override
		public void actionPerformed(ActionEvent e) {
			
		}}
